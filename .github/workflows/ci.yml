name: Package with PyInstaller and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Clean previous builds
      shell: pwsh
      run: |
        if (Test-Path dist) {
          Remove-Item -Recurse -Force dist
        }
        if (Test-Path build) {
          Remove-Item -Recurse -Force build
        }

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Check Python DLL
      run: |
        dir "C:\hostedtoolcache\windows\Python\3.8.10\x64\python38.dll"


    - name: Run Terminal Commands
      run: |
       echo "Checking Python Path"
       where python
       python --version


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Package with PyInstaller
      run: |
        pyinstaller reactautomationtoolv3s.spec

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v3.2.6  # Versiyon numarasını buradan ayarlayın
        release_name: "React Automation Tool v3.2.6"
        draft: false  # Taslak olarak ayarlanabilir (true) veya yayınlanabilir (false)
        prerelease: true  # Ön sürümse true yapabilirsiniz

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/reactautomationtoolv3.exe  # Derlenen dosya
        asset_name: reactautomationtoolv3.exe  # Release'teki dosya adı
        asset_content_type: application/octet-stream
